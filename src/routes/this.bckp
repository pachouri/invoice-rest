  
    
	  /**
     * This method create  record for product family
     * @param string $quote - The text of post
     * @param int $id - The user id
     */
    $app->post('/families', function (Request $request, Response $response) {
      // Gets quote and user id
     
	        $ext_family_id=$request->getParam('ext_family_id');
			$family_name=$request->getParam('family_name');
            
           

      // Gets the database connection
      $conn = PDOConnection::getConnection();

      try {
        // Gets the user into the database
  			$sql = "SELECT * FROM ext_family_map where 	ext_family_id=:ext_family_id";
  			$stmt = $conn->prepare($sql);
  			$stmt->bindParam(":ext_family_id", $ext_family_id);
  			$stmt->execute();
  			$query = $stmt->fetchObject();

  			// If user exist
  			if ($query) {
                $data['status'] = "Families Aleady Exist";
        } else {
			
          // Insert Data for Client Who is not exist:
     
          $sql = "INSERT INTO  ip_families(family_name)VALUES(:family_name)";
			  $stmt = $conn->prepare($sql);
			  $stmt->bindParam(":family_name", $family_name);
			  
		  
          $result = $stmt->execute();
		  if($result){
			 //selecting MAX ID to Map External System Families ID and Invoice Plane families ID
			$sql = "SELECT MAX(family_id) FROM ip_families ";
            $stmt = $conn->query($sql);
            $maxid = $stmt->fetchAll();
		    $this['logger']->info("Record Created For This ID".$maxid[0]['MAX(family_id)']);
			//Creating Record for Map External System Client ID and Invoice Plane Client ID
			$sql = "INSERT INTO ext_family_map(ext_family_id, family_id) VALUES(:ext_family_id, :family_id)";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(":ext_family_id", $ext_family_id);
            $stmt->bindParam(":family_id", $maxid[0]['MAX(family_id)']);
            $result = $stmt->execute();
		   }
          $data['status'] = $result;
		 }
        // Return the result
        $response = $response->withHeader('Content-Type','application/json');
        $response = $response->withStatus(200);
        $response = $response->withJson($data);
        return $response;
      } catch (PDOException $e) {
        $this['logger']->error("DataBase Error.<br/>" . $e->getMessage());
      } catch (Exception $e) {
        $this['logger']->error("General Error.<br/>" . $e->getMessage());
      } finally {
        // Destroy the database connection
        $conn = null;
      }
      });
	   /**
     * This method create  record for product family
     * @param string $quote - The text of post
     * @param int $id - The user id
     */
    $app->post('/families', function (Request $request, Response $response) {
      // Gets quote and user id
     
	        $ext_family_id=$request->getParam('ext_family_id');
			$family_name=$request->getParam('family_name');
            
           

      // Gets the database connection
      $conn = PDOConnection::getConnection();

      try {
        // Gets the user into the database
  			$sql = "SELECT * FROM ext_family_map where 	ext_family_id=:ext_family_id";
  			$stmt = $conn->prepare($sql);
  			$stmt->bindParam(":ext_family_id", $ext_family_id);
  			$stmt->execute();
  			$query = $stmt->fetchObject();

  			// If user exist
  			if ($query) {
                $data['status'] = "Families Aleady Exist";
        } else {
			
          // Insert Data for Client Who is not exist:
     
          $sql = "INSERT INTO  ip_families(family_name)VALUES(:family_name)";
			  $stmt = $conn->prepare($sql);
			  $stmt->bindParam(":family_name", $family_name);
			  
		  
          $result = $stmt->execute();
		  if($result){
			 //selecting MAX ID to Map External System Families ID and Invoice Plane families ID
			$sql = "SELECT MAX(family_id) FROM ip_families ";
            $stmt = $conn->query($sql);
            $maxid = $stmt->fetchAll();
		    $this['logger']->info("Record Created For This ID".$maxid[0]['MAX(family_id)']);
			//Creating Record for Map External System Client ID and Invoice Plane Client ID
			$sql = "INSERT INTO ext_family_map(ext_family_id, family_id) VALUES(:ext_family_id, :family_id)";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(":ext_family_id", $ext_family_id);
            $stmt->bindParam(":family_id", $maxid[0]['MAX(family_id)']);
            $result = $stmt->execute();
		   }
          $data['status'] = $result;
		 }
        // Return the result
        $response = $response->withHeader('Content-Type','application/json');
        $response = $response->withStatus(200);
        $response = $response->withJson($data);
        return $response;
      } catch (PDOException $e) {
        $this['logger']->error("DataBase Error.<br/>" . $e->getMessage());
      } catch (Exception $e) {
        $this['logger']->error("General Error.<br/>" . $e->getMessage());
      } finally {
        // Destroy the database connection
        $conn = null;
      }
      });
	  
	  /**
     * This method create  record for product 
     * @param string $quote - The text of post
     * @param int $id - The user id
     */
    $app->post('/products', function (Request $request, Response $response) {
      // Gets quote and user id
     
	        $ext_product_id=$request->getParam('ext_product_id');
			$product_sku=$request->getParam('product_sku');
			$product_name=$request->getParam('product_name');
			$product_description=$request->getParam('product_description');
			$product_price=$request->getParam('product_price');
			$purchase_price=$request->getParam('purchase_price');
			$provider_name=$request->getParam('provider_name');
			$tax_rate_id=$request->getParam('tax_rate_id');
			$unit_id=$request->getParam('unit_id');
			$product_tariff=$request->getParam('product_tariff');
            
    

      // Gets the database connection
      $conn = PDOConnection::getConnection();

      try {
        // Gets the user into the database
  			$sql = "SELECT * FROM ext_product_map where 	ext_product_id=:ext_product_id";
  			$stmt = $conn->prepare($sql);
  			$stmt->bindParam(":ext_product_id", $ext_product_id);
  			$stmt->execute();
  			$query = $stmt->fetchObject();

  			// If user exist
  			if ($query) {
                $data['status'] = "Product Aleady Exist";
        } else {
			
          // Insert Data for Client Who is not exist:
     
          $sql = "INSERT INTO   ip_products(product_sku,product_name,product_description,product_price,purchase_price,provider_name,tax_rate_id,unit_id,product_tariff)VALUES(:product_sku,:product_name,:product_description,:product_price,:purchase_price,:provider_name,:tax_rate_id,:unit_id,:product_tariff)";
			  $stmt = $conn->prepare($sql);
			  $stmt->bindParam(":product_sku", $product_sku);
			  $stmt->bindParam(":product_name", $product_name);
			  $stmt->bindParam(":product_description", $product_description);
			  $stmt->bindParam(":product_price", $product_price);
			  $stmt->bindParam(":purchase_price", $purchase_price);
			  $stmt->bindParam(":provider_name", $provider_name);
		      $stmt->bindParam(":tax_rate_id", $tax_rate_id);
		      $stmt->bindParam(":unit_id", $unit_id);
			  $stmt->bindParam(":unit_id", $unit_id);
			  $stmt->bindParam(":product_tariff", $product_tariff);
			   
          $result = $stmt->execute();
		  if($result){
			 //selecting MAX ID to Map External System Families ID and Invoice Plane families ID
			$sql = "SELECT MAX(product_id) FROM ip_products ";
            $stmt = $conn->query($sql);
            $maxid = $stmt->fetchAll();
		    $this['logger']->info("Record Created For This ID".$maxid[0]['MAX(product_id)']);
			//Creating Record for Map External System Client ID and Invoice Plane Client ID
			$sql = "INSERT INTO ext_product_map(ext_product_id, product_id) VALUES(:ext_product_id, :product_id)";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(":ext_product_id", $ext_product_id);
            $stmt->bindParam(":product_id", $maxid[0]['MAX(product_id)']);
            $result = $stmt->execute();
		   }
          $data['status'] = $result;
		 }
        // Return the result
        $response = $response->withHeader('Content-Type','application/json');
        $response = $response->withStatus(200);
        $response = $response->withJson($data);
        return $response;
      } catch (PDOException $e) {
        $this['logger']->error("DataBase Error.<br/>" . $e->getMessage());
      } catch (Exception $e) {
        $this['logger']->error("General Error.<br/>" . $e->getMessage());
      } finally {
        // Destroy the database connection
        $conn = null;
      }
      });
	  
	  
	  /**
     * This method create  record for product family
     * @param string $quote - The text of post
     * @param int $id - The user id
     */
    $app->post('/families', function (Request $request, Response $response) {
      // Gets quote and user id
     
	        $ext_family_id=$request->getParam('ext_family_id');
			$family_name=$request->getParam('family_name');
            
           

      // Gets the database connection
      $conn = PDOConnection::getConnection();

      try {
        // Gets the user into the database
  			$sql = "SELECT * FROM ext_family_map where 	ext_family_id=:ext_family_id";
  			$stmt = $conn->prepare($sql);
  			$stmt->bindParam(":ext_family_id", $ext_family_id);
  			$stmt->execute();
  			$query = $stmt->fetchObject();

  			// If user exist
  			if ($query) {
                $data['status'] = "Families Aleady Exist";
        } else {
			
          // Insert Data for Client Who is not exist:
     
          $sql = "INSERT INTO  ip_families(family_name)VALUES(:family_name)";
			  $stmt = $conn->prepare($sql);
			  $stmt->bindParam(":family_name", $family_name);
			  
		  
          $result = $stmt->execute();
		  if($result){
			 //selecting MAX ID to Map External System Families ID and Invoice Plane families ID
			$sql = "SELECT MAX(family_id) FROM ip_families ";
            $stmt = $conn->query($sql);
            $maxid = $stmt->fetchAll();
		    $this['logger']->info("Record Created For This ID".$maxid[0]['MAX(family_id)']);
			//Creating Record for Map External System Client ID and Invoice Plane Client ID
			$sql = "INSERT INTO ext_family_map(ext_family_id, family_id) VALUES(:ext_family_id, :family_id)";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(":ext_family_id", $ext_family_id);
            $stmt->bindParam(":family_id", $maxid[0]['MAX(family_id)']);
            $result = $stmt->execute();
		   }
          $data['status'] = $result;
		 }
        // Return the result
        $response = $response->withHeader('Content-Type','application/json');
        $response = $response->withStatus(200);
        $response = $response->withJson($data);
        return $response;
      } catch (PDOException $e) {
        $this['logger']->error("DataBase Error.<br/>" . $e->getMessage());
      } catch (Exception $e) {
        $this['logger']->error("General Error.<br/>" . $e->getMessage());
      } finally {
        // Destroy the database connection
        $conn = null;
      }
      });
	   /**
     * This method create  record for product family
     * @param string $quote - The text of post
     * @param int $id - The user id
     */